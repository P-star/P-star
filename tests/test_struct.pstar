SCENE main {
	/* Empty struct */
	struct empty {
	};

	/* Function with same name as inside struct, should not be used */
	int print() {
		echo "I should not be called!\n";
	}
	string name = "I should not be changed\n";

	/* Define a new struct type with two variables and one function */
	struct person {
		public string name;
		public int age;

		public int print() {
			echo "$name is $age years old\n";
		};
	};

	/* Create an instance of the struct */
	person author;

	/* Set the variables in the struct */
	author->age = 25;
	author->name = "Atle";
	author->print();

	echo name;

	/* Struct with constructor and destructor */
	struct ctor_dtor {
		int value;
		int second_value;

		ctor_dtor (int _value) {
			value = _value;
			second_value = _value + 1;
			echo "C-tor called, value was $value\n";
		};
		~ctor_dtor () {
			echo "D-tor called, value was $value\n";
		};
		public int dump() {
			echo "Dump: $value - $second_value\n";
		};
	};

	ctor_dtor cd_a(1);
	ctor_dtor cd_b(2);
	{
		ctor_dtor cd_a(3);
		ctor_dtor cd_b(4);
		ctor_dtor cd_c(5);
	}

	int argument(int arg) {
		return arg;
	}

	/* Test for ctor with function call as argument*/
	ctor_dtor cd_c(argument(6));

	return 0;
}
